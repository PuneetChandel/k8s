# POD

apiVersion: v1
kind: Pod
metadata:
 name: mypod
 labels:
  type: frontend
  app: myapp
  
spec:
 containers:
  - command: # in container
     - /bin/sh
     - -c
     - sleep 500
     - echo hello
    name: redis
    image: redis
    
    resources:
      requests:
         memory: "1Gi"
         cpu: 1
    securityContext: # in container
      runAsUser: 1000
      capabilities: ------------------> Only at Container Level not at POD
        add: ["NET_ADMIN", "SYS_TIME"] 
    
    ports:
        - containerPort: 80
    volumeMounts: # in container
    - mountPath: /test-ebs
      name: test-volume
    
    env: # in container
     - name: APP_USER
       value: myuser 
       
     - name : APP_COLOR
       valueFrom:
         confifMapKeyRef:
           name: app-config
           key: app_color
     
     - name : DB_pwd
       valueFrom:
         secretKeyRef:
           name: app-secret
           key: db_pass
           
    envFrom: # in container
      - configMapRef:
          name: app-config
      - secretRef:
           name: app-config
 volumes:
   - name: test-volume
     emptyDir: {}
   - name: config-vol
     configMap:
       name: app-config
   - name: secret-vol
     secret:
       secretName: app-secret


# ReplicaSet
apiVersion: apps/v1
kind: ReplicaSet
metadata:
 name: myRS
 labels:
  type: rs
  app: myapp
spec:
 replicas: 3
 selector:
  matchLabels: # which POD to use
    type: frontend
 template:
  metadata: # from pod
  spec: # from pod
   containers: 
  

    
 # Deployment -- create RS as well

apiVersion: apps/v1
kind: Deployment
metadata: 
   name: nginx-depl
   labels:
     type: depapp
     app: nginx-app
 
spec: 
  replicas: 3
  selector:
   matchLabels: # which POD to use
    type: frontend
    
  template:
   metadata: # from pod
   spec: # from pod
     containers: 
     
 

 
   
   
   
